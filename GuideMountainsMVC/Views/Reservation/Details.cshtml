@model GuideMountainsMVC.Application.ViewModel.ReservationVm.ReservationVm

<h2 class="mb-4">Reservation for @Model.MountainPlaceName</h2>

<p><strong>Reservation Status:</strong> @(Model.IsConfirmed ? "✅ Confirmed" : "❌ Not Confirmed")</p>
<p><strong>Created on:</strong> @Model.CreatedDate.ToString("yyyy-MM-dd")</p>

@if (Model.ReservationItems != null && Model.ReservationItems.Any())
{
    <table class="table table-bordered mt-4">
        <thead class="thead-dark">
            <tr>
                <th>Item Type</th>
                <th>Description</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ReservationItems)
            {
                <tr>
                    <td>
                        @(item.SkiPassId != null ? "🎿 SkiPass" :
                            item.AccommodationId != null ? "🏨 Accommodation" :
                            item.EquipmentRentalId != null ? "🎒 Equipment" : "Other")
                    </td>
                    <td>
                        @if (item.SkiPassId != null)
                        {
                            <span>
                                @item.SkiPassName @item.SkiPassTypeName,
                                @(item.SkiPassQuantity ?? 0)x (@(item.SkiPassDays ?? 0) days)
                            </span>
                        }
                        else if (item.AccommodationId != null)
                        {
                            <span>
                                @item.AccommodationName – @(item.AccommodationGuests ?? 0) guests,
                                @(item.AccommodationNights ?? (
                                    item.AccommodationStartDate.HasValue && item.AccommodationEndDate.HasValue
                                    ? (item.AccommodationEndDate.Value - item.AccommodationStartDate.Value).Days
                                    : 0
                                    )) nights
                            </span>
                        }
                        else if (item.EquipmentRentalId != null)
                        {
                            <span>
                                @item.EquipmentName – @(item.EquipmentQuantity ?? 0) pcs.
                                for @(item.EquipmentDays ?? 0) days
                            </span>
                        }
                    </td>
                    <td>@item.Price.ToString("C", new System.Globalization.CultureInfo("en-US"))</td>
                    <td>
                        <form asp-action="RemoveItem" method="post">
                            <input type="hidden" name="reservationId" value="@Model.Id" />
                            <input type="hidden" name="itemId" value="@item.Id" />
                            <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p class="mt-3">
        <strong>💰 Total Price:</strong>
        <span class="text-success">@Model.ReservationItems.Sum(i => i.Price).ToString("C", new System.Globalization.CultureInfo("en-US"))</span>
    </p>
}
else
{
    <p class="text-muted">No items added to this reservation.</p>
}

@if (!Model.IsConfirmed)
{
    <form asp-action="ConfirmReservation" method="post" class="mt-4">
        <input type="hidden" name="reservationId" value="@Model.Id" />
        <button type="submit" class="btn btn-success">✅ Confirm Reservation</button>
    </form>
}
<form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="mt-3"
      onsubmit="return confirm('Are you sure you want to delete this reservation?');">
    <button type="submit" class="btn btn-outline-danger">🗑️ Delete Reservation</button>
</form>
